#!/usr/bin/env python3
"""
Launcher script for the complete LUNA MCU system

This script starts all three components:
- Port 5001: Main MCU controller
- Port 5002: Secondary CC controller  
- Port 5003: Dashboard for configuration

Author: Generated by GitHub Copilot
License: MIT
"""

import subprocess
import sys
import time
import threading
import logging

# Set up logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def run_app():
    """Run the main application (ports 5001 and 5002)"""
    try:
        subprocess.run([sys.executable, 'app.py'], check=True)
    except KeyboardInterrupt:
        logger.info("Main app stopped")
    except Exception as e:
        logger.error(f"Main app error: {e}")

def run_dashboard():
    """Run the dashboard (port 5003)"""
    try:
        subprocess.run([sys.executable, 'dashboard.py'], check=True)
    except KeyboardInterrupt:
        logger.info("Dashboard stopped")
    except Exception as e:
        logger.error(f"Dashboard error: {e}")

if __name__ == '__main__':
    try:
        logger.info("Starting LUNA MCU Complete System")
        logger.info("="*50)
        logger.info("Port 5001: Main MCU Controller")
        logger.info("Port 5002: Secondary CC Controller")
        logger.info("Port 5003: Configuration Dashboard")
        logger.info("="*50)
        
        # Start dashboard in a separate thread
        dashboard_thread = threading.Thread(target=run_dashboard, daemon=True)
        dashboard_thread.start()
        
        # Give dashboard time to start
        time.sleep(1)
        
        logger.info("Dashboard started. Opening main application...")
        
        # Start main app (this will run in the main thread)
        run_app()
        
    except KeyboardInterrupt:
        logger.info("System shutdown requested")
        print("\nShutting down all servers...")
    except Exception as e:
        logger.error(f"System error: {e}")
